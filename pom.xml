<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.nandhu.springex</groupId>
	<artifactId>SpringMVCJPAHibernateDemo</artifactId>
	<packaging>war</packaging>
	<version>0.0.2-SNAPSHOT</version>
	<name>SpringMVCJPAHibernateDemo Maven Webapp</name>

	<properties>
		<java.version>1.8</java.version>
	</properties>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
	</parent>
	
	<dependencies>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<!-- Junit -->
		<!-- <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		spring-test
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.3.8.RELEASE</version>
			<scope>test</scope>
		</dependency>

		mockito-core
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.7.22</version>
			<scope>test</scope>
		</dependency>

		Hamcrest-core - pattern matching
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		Hibernate has entity manager mapping internally
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.2.9.Final</version>
		</dependency>
 -->
		<!-- Postgresql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<!-- <version>9.4.1212</version> -->
		</dependency>

		 <!-- SPRING MVC - has web, core -->
	<!-- 	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.7.RELEASE</version>
		</dependency>

		SPRING ORM - has transaction
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>4.3.7.RELEASE</version>
		</dependency>

		SPRING DATA JPA
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.11.1.RELEASE</version>
		</dependency>
 -->
		<!-- javax.servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<!-- <version>3.1.0</version> -->
			<scope>provided</scope>
		</dependency>

		<!-- javax.servlet.jsp-api -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
		</dependency>

		<!-- jstl-core -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<!-- <version>1.2</version> -->
		</dependency>

		<!-- JSR 303 Validation -->
	<!-- 	hibernate-validator
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.4.1.Final</version>
		</dependency>

		Bean validation-api
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
 -->	</dependencies>

	<build>
		<finalName>SpringMVCJPAHibernateDemo</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

			<!-- 	<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<warSourceDirectory>src/main/webapp</warSourceDirectory>
						<warName>SpringMVCJPAHibernateDemo</warName>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
 -->
<!-- 				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<configuration>
						<container>
							<containerId>tomcat7x</containerId>
							<zipUrlInstaller>
								<url>http://repo1.maven.org/maven2/org/apache/tomcat/tomcat/7.0.70/tomcat-7.0.70.zip</url>
							</zipUrlInstaller>
							<type>embedded</type> Added
						</container>
					</configuration>
				</plugin> -->

				<!-- Plugin to convert executable war with tomcat server -->
			<!-- 	<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.0</version>
					<executions>
						<execution>
							<id>tomcat-run</id>
							<goals>
								<goal>exec-war-only</goal>
							</goals>
							<phase>package</phase>
							<configuration>
								<path>/</path>
								<enableNaming>false</enableNaming>
								<finalName>SpringMVCJPAHibernateDemo.jar</finalName>
								<charset>utf-8</charset>
							</configuration>
						</execution>
					</executions>
				</plugin>
 -->
				<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Docker spotify plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<imageName>mymvcdocker</imageName>
					<baseImage>java</baseImage>
					<entryPoint>["java", "-jar", "/${project.build.finalName}.war"]</entryPoint>
					<!-- <cmd>["catalina.sh", "run"]</cmd>-->
					<!-- copy the service's jar file from target into the root directory 
						of the image -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.war</include>
						</resource>
					</resources>
				</configuration>
			</plugin>

				<!-- <plugin> <groupId>org.codehaus.cargo</groupId> <artifactId>cargo-maven2-plugin</artifactId> 
					<executions> <execution> <id>start-cargo</id> <phase>pre-integration-test</phase> 
					<goals> <goal>start</goal> </goals> </execution> <execution> <id>stop-cargo</id> 
					<phase>post-integration-test</phase> <goals> <goal>stop</goal> </goals> </execution> 
					</executions> </plugin> -->
			</plugins>
		</pluginManagement>
	</build>
	<!-- <profiles> <profile> <id>tomcat7x-local</id> <build> <pluginManagement> 
		<plugins> <plugin> <groupId>org.codehaus.cargo</groupId> <artifactId>cargo-maven2-plugin</artifactId> 
		<configuration> <container> <containerId>tomcat7x</containerId> <zipUrlInstaller> 
		<url>http://repo1.maven.org/maven2/org/apache/tomcat/tomcat/7.0.70/tomcat-7.0.70.zip</url> 
		</zipUrlInstaller> </container> </configuration> </plugin> </plugins> </pluginManagement> 
		</build> </profile> </profiles> -->
</project>
